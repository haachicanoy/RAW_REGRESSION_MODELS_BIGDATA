?png
39.4+21.7
options(warn=-1)
library(data.table)
library(raster)
library(rgdal)
library(rasterVis)
library(ggplot2)
library(trend)
library(ggthemes)
library(dplyr)
library(tidyr)
countyList <- data.frame(Cluster=c(rep('Cluster 1', 3),
rep('Cluster 2', 4),
rep('Cluster 3', 4),
rep('Cluster 4', 4)),
County=c('Kilifi', 'Tana River', 'Garissa',
'Kwale', 'Makueni', 'Taita Taveta', 'Embu',
'Meru', 'Nyeri', 'Nyandarua', 'Nakuru',
'Homa Bay', 'Siaya', 'Busia', 'West Pokot')) # Define counties to analyze by cluster
countyList <- countyList[1,] # c(1,15)
countyList$Cluster <- as.character(countyList$Cluster)
countyList$County <- as.character(countyList$County)
periodList <- c('2021_2045', '2041_2065')
rcpList    <- paste("rcp", c(26, 45, 60, 85), sep="")
gcmList    <- c("bcc_csm1_1","bcc_csm1_1_m","csiro_mk3_6_0","gfdl_cm3", "gfdl_esm2g","gfdl_esm2m","ipsl_cm5a_mr","miroc_esm", "miroc_esm_chem","miroc_miroc5","ncc_noresm1_m") # "mohc_hadgem2_es"
periodList <- c('2021_2045', '2041_2065')
rcpList    <- paste("rcp", c(26, 45, 60, 85), sep="")
gcmList    <- c("bcc_csm1_1","bcc_csm1_1_m","csiro_mk3_6_0","gfdl_cm3", "gfdl_esm2g","gfdl_esm2m","ipsl_cm5a_mr","miroc_esm", "miroc_esm_chem","miroc_miroc5","ncc_noresm1_m") # "mohc_hadgem2_es"
seasonList <- c('first', 'second')
wrapFutClimInd <- lapply(1:nrow(countyList), function(g){
wrapFutClimInd <- lapply(1:length(seasonList), function(h){
wrapFutClimInd <- lapply(1:length(periodList), function(i){
cat('Processing information of period:', periodList[i], '\n')
wrapClimInd <- lapply(1:length(rcpList), function(j){
cat('Processing information of RCP:', rcpList[j], '\n')
wrapClimInd <- lapply(1:length(gcmList), function(k){
cat('Processing information of GCM:', gcmList[k], '\n')
load(paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/climatic_indices/future/', seasonList[h], '_season/', gcmList[k], '/', periodList[i], '/', rcpList[j], '/', gsub(pattern=' ', replacement='_', countyList$County[[g]]), '_', seasonList[h], '_season.RData', sep=''))
first_seasonFut <- clim_indexes; rm(clim_indexes)
years_analysis <- unlist(strsplit(periodList[i], split='_'))
years_analysis <- as.numeric(years_analysis)
years_analysis <- years_analysis[1]:years_analysis[2]
wrapClimInd <- lapply(1:length(first_seasonFut), function(m){
wrapClimInd <- data.frame(Average = as.numeric(colMeans(first_seasonFut[[m]][,4:ncol(first_seasonFut[[m]])])),
Index   = names(first_seasonFut)[m],
GCM     = gcmList[k],
RCP     = rcpList[j],
Period  = periodList[i],
County  = countyList$County[g],
Season  = seasonList[h],
Years   = years_analysis)
return(wrapClimInd)
})
wrapClimInd <- do.call(rbind, wrapClimInd)
return(wrapClimInd)
})
wrapClimInd <- do.call(rbind, wrapClimInd)
return(wrapClimInd)
})
wrapClimInd <- do.call(rbind, wrapClimInd)
return(wrapClimInd)
})
wrapFutClimInd <- do.call(rbind, wrapFutClimInd)
return(wrapFutClimInd)
})
wrapFutClimInd <- do.call(rbind, wrapFutClimInd)
library(ggplot2)
gg <- ggplot(wrapFutClimInd[wrapFutClimInd$County==countyList$County[g] & wrapFutClimInd$Season=='first' & wrapFutClimInd$Period=='2021_2045',], aes(x=Years, y=Average, colour=GCM)) + geom_line()
gg <- gg + facet_grid(Index ~ RCP, scales='free_y') + theme_bw()
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/future_trends/', gsub(pattern=' ', replacement='_', countyList$County[g]), '_firstSeason_futureTrend_2021_2045.pdf', sep=''), plot=gg, width=8, height=9, units='in')
gg <- ggplot(wrapFutClimInd[wrapFutClimInd$County==countyList$County[g] & wrapFutClimInd$Season=='second' & wrapFutClimInd$Period=='2021_2045',], aes(x=Years, y=Average, colour=GCM)) + geom_line()
gg <- gg + facet_grid(Index ~ RCP, scales='free_y') + theme_bw()
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/future_trends/', gsub(pattern=' ', replacement='_', countyList$County[g]), '_secondSeason_futureTrend_2021_2045.pdf', sep=''), plot=gg, width=8, height=9, units='in')
gg <- ggplot(wrapFutClimInd[wrapFutClimInd$County==countyList$County[g] & wrapFutClimInd$Season=='first' & wrapFutClimInd$Period=='2041_2065',], aes(x=Years, y=Average, colour=GCM)) + geom_line()
gg <- gg + facet_grid(Index ~ RCP, scales='free_y') + theme_bw()
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/future_trends/', gsub(pattern=' ', replacement='_', countyList$County[g]), '_firstSeason_futureTrend_2041_2065.pdf', sep=''), plot=gg, width=8, height=9, units='in')
gg <- ggplot(wrapFutClimInd[wrapFutClimInd$County==countyList$County[g] & wrapFutClimInd$Season=='second' & wrapFutClimInd$Period=='2041_2065',], aes(x=Years, y=Average, colour=GCM)) + geom_line()
gg <- gg + facet_grid(Index ~ RCP, scales='free_y') + theme_bw()
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/future_trends/', gsub(pattern=' ', replacement='_', countyList$County[g]), '_secondSeason_futureTrend_2041_2065.pdf', sep=''), plot=gg, width=8, height=9, units='in')
return(wrapFutClimInd)
})
wrapFutClimInd <- do.call(rbind, wrapFutClimInd)
seasonList <- c('first', 'second')
countyList <- 'Kilifi'
# *** Load historical data
load(paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/climatic_indices/historical/', seasonList[1], '_season/', countyList[1], '_', seasonList[1], '_season.RData', sep=''))
first_season <- clim_indexes; rm(clim_indexes)
first_seasonWrap <- lapply(1:length(first_season), function(m){
wrapClimInd <- data.frame(Average = as.numeric(colMeans(first_season[[m]][,4:ncol(first_season[[m]])])),
Index   = names(first_season)[m],
Years   = 1981:2005,
Season  = 'First')
return(wrapClimInd)
})
first_seasonWrap <- do.call(rbind, first_seasonWrap)
first_seasonWrap <- as.data.frame(dplyr::summarise(group_by(first_seasonWrap, Index, Season), mean(Average)))
colnames(first_seasonWrap)[3] <- 'Average'
load(paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/climatic_indices/historical/', seasonList[2], '_season/', countyList[1], '_', seasonList[2], '_season.RData', sep=''))
second_season <- clim_indexes; rm(clim_indexes)
second_seasonWrap <- lapply(1:length(second_season), function(m){
wrapClimInd <- data.frame(Average = as.numeric(colMeans(second_season[[m]][,4:ncol(second_season[[m]])])),
Index   = names(second_season)[m],
Years   = 1981:2005,
Season  = 'Second')
return(wrapClimInd)
})
second_seasonWrap <- do.call(rbind, second_seasonWrap)
second_seasonWrap <- as.data.frame(dplyr::summarise(group_by(second_seasonWrap, Index, Season), mean(Average)))
colnames(second_seasonWrap)[3] <- 'Average'
all_seasons <- rbind(first_seasonWrap, second_seasonWrap); rm(first_seasonWrap, second_seasonWrap)
wrapFutClimInd_county <- as.data.frame(dplyr::summarise(group_by(wrapFutClimInd[wrapFutClimInd$County==countyList[1] & wrapFutClimInd$Period=='2021_2045',], Index, GCM, RCP, Season), mean(Average)))
colnames(wrapFutClimInd_county)[5] <- 'Average'
seasonList <- c('first', 'second')
proper <- function(x) paste0(toupper(substr(x, 1, 1)), tolower(substring(x, 2)))
wrapFutClimInd_absChange <- wrapFutClimInd_county
for(i in 1:9){
for(j in 1:length(seasonList)){
wrapFutClimInd_absChange$Average[which(wrapFutClimInd_absChange$Index==all_seasons$Index[i] & wrapFutClimInd_absChange$Season==seasonList[j])] <- wrapFutClimInd_absChange$Average[which(wrapFutClimInd_absChange$Index==all_seasons$Index[i] & wrapFutClimInd_absChange$Season==seasonList[j])] - all_seasons$Average[which(all_seasons$Index==all_seasons$Index[i] & all_seasons$Season==proper(seasonList[j]))]
}
}; rm(i, j)
wrapFutClimInd_absChange$combination <- paste(wrapFutClimInd_absChange$GCM, '-', wrapFutClimInd_absChange$RCP, sep='')
wrapFutClimInd_absChange$Season <- gsub(pattern='first', replacement='S1', x=wrapFutClimInd_absChange$Season)
wrapFutClimInd_absChange$Season <- gsub(pattern='second', replacement='S2', x=wrapFutClimInd_absChange$Season)
wrapFutClimInd_absChange$Index_season <- paste(wrapFutClimInd_absChange$Index, '-', wrapFutClimInd_absChange$Season, sep='')
wrapFutClimInd_absChange$Index <- NULL
wrapFutClimInd_absChange$GCM <- NULL
wrapFutClimInd_absChange$RCP <- NULL
wrapFutClimInd_absChange$Season <- NULL
wrapFutClimInd_absChange <- wrapFutClimInd_absChange %>% spread(key=Index_season, value=Average)
rownames(wrapFutClimInd_absChange) <- wrapFutClimInd_absChange$combination
wrapFutClimInd_absChange$combination <- NULL
library(FactoMineR)
res_pca  <- FactoMineR::PCA(X=wrapFutClimInd_absChange, graph=FALSE)
set.seed(1235)
res_hcpc <- FactoMineR::HCPC(res_pca) # Here we define number of scenarios
res_hcpc$desc.var
library(factoextra)
gg <- fviz_eig(res_pca, addlabels=TRUE, hjust = -0.3) + theme_bw()
gg
res_hcpc$data.clust
df_cluster <- res_hcpc$data.clust
dim(df_cluster %>% spread(clust, 'CDD-S1':'TOTRAIN-S2'))
dim(df_cluster %>% spread(clust, CDD-S1:TOTRAIN-S2))
names(df_cluster)
dim(df_cluster %>% gather(Index, Value, 'CDD-S1':'clust'))
dim(df_cluster %>% gather(Index, Value, CDD-S1:clust))
gsub(pattern='-', replacement='_', names(df_cluster))
names(df_cluster) <- gsub(pattern='-', replacement='_', names(df_cluster))
dim(df_cluster %>% gather(Index, Value, CDD_S1:clust))
View(df_cluster %>% gather(Index, Value, CDD_S1:clust))
dim(df_cluster %>% gather(Index, Value, CDD_S1:TOTRAIN_S2, clust))
dim(df_cluster %>% gather(Index, Value, clust, CDD_S1:TOTRAIN_S2))
View(df_cluster %>% gather(Index, Value, CDD_S1:TOTRAIN_S2))
df_cluster <- df_cluster %>% gather(Index, Value, CDD_S1:TOTRAIN_S2)
View(df_cluster)
strsplit(x=df_cluster$Index, split='_')
aux <- strsplit(x=df_cluster$Index, split='_')
aux <- lapply(1:length(aux), function(i){
z <- as.data.frame(t(aux[[i]]))
return(z)
})
aux
aux <- do.call(rbind, aux)
aux
head(aux)
lapply(aux, nrow)
unlist(lapply(aux, nrow))
unlist(lapply(aux, ncol))
df_cluster$Index
aux <- strsplit(x=df_cluster$Index, split='_S')
aux <- lapply(1:length(aux), function(i){
z <- as.data.frame(t(aux[[i]]))
return(z)
})
aux <- do.call(rbind, aux)
View(aux)
df_cluster$Index <- aux$V1
df_cluster$Season <- aux$V2
View(df_cluster)
df_cluster$Season <- gsub(pattern='1', replacement='First', df_cluster$Season)
df_cluster$Season <- gsub(pattern='2', replacement='Second', df_cluster$Season)
View(df_cluster)
View(df_cluster)
names(df_cluster)
names(df_cluster)[1] <- 'Scenario'
ggplot(df_cluster, aes(x=Scenario, y=Value)) + geom_boxplot(aes(colour=Season)) + facet_wrap(~ Index)
gg <- ggplot(df_cluster, aes(x=Scenario, y=Value)) + geom_boxplot(aes(colour=Season))
gg <- gg + facet_wrap(~ Index, scales='free_y')
gg <- gg + theme_bw() + geom_hline(yintercept=0)
gg
all_seasons$Index
df_cluster$Index <- factor(x=, levels=c('TMEAN', 'GDD_1', 'GDD_2', 'ND_t35', 'TOTRAIN', 'CDD', 'P5D', 'P_95', 'NDWS'))
df_cluster$Index
df_cluster$Index <- factor(x=df_cluster$Index, levels=c('TMEAN', 'GDD_1', 'GDD_2', 'ND_t35', 'TOTRAIN', 'CDD', 'P5D', 'P_95', 'NDWS'))
gg <- ggplot(df_cluster, aes(x=Scenario, y=Value)) + geom_boxplot(aes(colour=Season))
gg <- gg + facet_wrap(~ Index, scales='free_y')
gg <- gg + theme_bw() + geom_hline(yintercept=0)
gg
gg <- ggplot(df_cluster, aes(x=Scenario, y=Value)) + geom_boxplot(aes(colour=Season))
gg <- gg + facet_wrap(~ Index, scales='free_y')
gg <- gg + theme_bw() + geom_hline(yintercept=0) + ylab('Absolute change respect to baseline')
gg
countyList
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/cluster_analysis/2021_2045/', gsub(pattern=' ', replacement='_', countyList), '_absChange_baseline.pdf', sep=''), plot=gg, width=8, height=9, units='in')
seasonList <- c('first', 'second')
countyList <- 'Kilifi'
load(paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/climatic_indices/historical/', seasonList[1], '_season/', countyList[1], '_', seasonList[1], '_season.RData', sep=''))
first_season <- clim_indexes; rm(clim_indexes)
first_seasonWrap <- lapply(1:length(first_season), function(m){
wrapClimInd <- data.frame(Average = as.numeric(colMeans(first_season[[m]][,4:ncol(first_season[[m]])])),
Index   = names(first_season)[m],
Years   = 1981:2005,
Season  = 'First')
return(wrapClimInd)
})
first_seasonWrap <- do.call(rbind, first_seasonWrap)
first_seasonWrap <- as.data.frame(dplyr::summarise(group_by(first_seasonWrap, Index, Season), mean(Average)))
colnames(first_seasonWrap)[3] <- 'Average'
load(paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/climatic_indices/historical/', seasonList[2], '_season/', countyList[1], '_', seasonList[2], '_season.RData', sep=''))
second_season <- clim_indexes; rm(clim_indexes)
second_seasonWrap <- lapply(1:length(second_season), function(m){
wrapClimInd <- data.frame(Average = as.numeric(colMeans(second_season[[m]][,4:ncol(second_season[[m]])])),
Index   = names(second_season)[m],
Years   = 1981:2005,
Season  = 'Second')
return(wrapClimInd)
})
second_seasonWrap <- do.call(rbind, second_seasonWrap)
second_seasonWrap <- as.data.frame(dplyr::summarise(group_by(second_seasonWrap, Index, Season), mean(Average)))
colnames(second_seasonWrap)[3] <- 'Average'
all_seasons <- rbind(first_seasonWrap, second_seasonWrap); rm(first_seasonWrap, second_seasonWrap)
wrapFutClimInd_county <- as.data.frame(dplyr::summarise(group_by(wrapFutClimInd[wrapFutClimInd$County==countyList[1] & wrapFutClimInd$Period=='2041_2065',], Index, GCM, RCP, Season), mean(Average)))
colnames(wrapFutClimInd_county)[5] <- 'Average'
seasonList <- c('first', 'second')
proper <- function(x) paste0(toupper(substr(x, 1, 1)), tolower(substring(x, 2)))
wrapFutClimInd_absChange <- wrapFutClimInd_county
for(i in 1:9){
for(j in 1:length(seasonList)){
wrapFutClimInd_absChange$Average[which(wrapFutClimInd_absChange$Index==all_seasons$Index[i] & wrapFutClimInd_absChange$Season==seasonList[j])] <- wrapFutClimInd_absChange$Average[which(wrapFutClimInd_absChange$Index==all_seasons$Index[i] & wrapFutClimInd_absChange$Season==seasonList[j])] - all_seasons$Average[which(all_seasons$Index==all_seasons$Index[i] & all_seasons$Season==proper(seasonList[j]))]
}
}; rm(i, j)
wrapFutClimInd_absChange$combination <- paste(wrapFutClimInd_absChange$GCM, '-', wrapFutClimInd_absChange$RCP, sep='')
wrapFutClimInd_absChange$Season <- gsub(pattern='first', replacement='S1', x=wrapFutClimInd_absChange$Season)
wrapFutClimInd_absChange$Season <- gsub(pattern='second', replacement='S2', x=wrapFutClimInd_absChange$Season)
wrapFutClimInd_absChange$Index_season <- paste(wrapFutClimInd_absChange$Index, '-', wrapFutClimInd_absChange$Season, sep='')
# wrapClimInd_relChange$combination <- paste(wrapClimInd_relChange$GCM, '-', wrapClimInd_relChange$RCP, sep='')
wrapFutClimInd_absChange$Index <- NULL
wrapFutClimInd_absChange$GCM <- NULL
wrapFutClimInd_absChange$RCP <- NULL
wrapFutClimInd_absChange$Season <- NULL
wrapFutClimInd_absChange <- wrapFutClimInd_absChange %>% spread(key=Index_season, value=Average)
rownames(wrapFutClimInd_absChange) <- wrapFutClimInd_absChange$combination
wrapFutClimInd_absChange$combination <- NULL
library(FactoMineR)
res_pca  <- FactoMineR::PCA(X=wrapFutClimInd_absChange, graph=FALSE)
set.seed(1235)
res_hcpc <- FactoMineR::HCPC(res_pca) # Here we define number of scenarios
library(factoextra)
gg <- fviz_eig(res_pca, addlabels=TRUE, hjust = -0.3) + theme_bw()
gg
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/cluster_analysis/2041_2065/', gsub(pattern=' ', replacement='_', countyList), '_eigenValuesPCA_2041_2065.pdf', sep=''), plot=gg, width=7, height=7, units='in')
gg <- fviz_pca_var(res_pca, col.var="contrib")+ scale_color_gradient2(low="white", mid="blue", high="red", midpoint = 96) + theme_bw()
gg
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/cluster_analysis/2041_2065/', gsub(pattern=' ', replacement='_', countyList), '_varMapContributionsPCA_2041_2065.pdf', sep=''), plot=gg, width=7.5, height=7, units='in')
library("corrplot")
corrplot(res_pca$var$cos2, is.corr=FALSE)
corrplot(res_pca$var$contrib[,1:2], is.corr=FALSE)
corrplot(res_pca$var$cor[,1:2], method="ellipse", is.corr=TRUE)
gg <- fviz_pca_biplot(res_pca,  label="var", habillage=res_hcpc$data.clust$clust, addEllipses=TRUE, ellipse.level=0.95) +
scale_color_manual(values=c("black", "red", "forestgreen")) +
scale_fill_manual(values=c("black", "red", "forestgreen")) + theme_bw()
gg
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/cluster_analysis/2041_2065/', gsub(pattern=' ', replacement='_', countyList), '_biplotClusterPCA_2041_2065.pdf', sep=''), plot=gg, width=7.5, height=7, units='in')
df_cluster <- res_hcpc$data.clust
names(df_cluster) <- gsub(pattern='-', replacement='_', names(df_cluster))
df_cluster <- df_cluster %>% gather(Index, Value, CDD_S1:TOTRAIN_S2)
aux <- strsplit(x=df_cluster$Index, split='_S')
aux <- lapply(1:length(aux), function(i){
z <- as.data.frame(t(aux[[i]]))
return(z)
})
aux <- do.call(rbind, aux)
df_cluster$Index <- aux$V1
df_cluster$Season <- aux$V2
df_cluster$Season <- gsub(pattern='1', replacement='First', df_cluster$Season)
df_cluster$Season <- gsub(pattern='2', replacement='Second', df_cluster$Season)
names(df_cluster)[1] <- 'Scenario'
df_cluster$Index <- factor(x=df_cluster$Index, levels=c('TMEAN', 'GDD_1', 'GDD_2', 'ND_t35', 'TOTRAIN', 'CDD', 'P5D', 'P_95', 'NDWS'))
gg <- ggplot(df_cluster, aes(x=Scenario, y=Value)) + geom_boxplot(aes(colour=Season))
gg <- gg + facet_wrap(~ Index, scales='free_y')
gg <- gg + theme_bw() + geom_hline(yintercept=0) + ylab('Absolute change respect to baseline')
gg
ggsave(filename=paste('//dapadfs/workspace_cluster_8/Kenya_KACCAL/results/graphics/cluster_analysis/2041_2065/', gsub(pattern=' ', replacement='_', countyList), '_absChange_baseline.pdf', sep=''), plot=gg, width=8, height=9, units='in')
